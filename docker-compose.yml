services:
  backend:
    build: ./backend
    container_name: learn2trade_backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
    volumes:
      - ./backend:/usr/src/app
      # - /usr/src/app/node_modules   # ❌ à éviter

  db:
    image: postgres:16
    container_name: learn2trade_db
    restart: always
    environment:
      POSTGRES_USER: l2t_user
      POSTGRES_PASSWORD: l2t_pass
      POSTGRES_DB: learn2trade
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init:/docker-entrypoint-initdb.d

  #front Vite en dev
  frontend:
    image: node:20-alpine
    container_name: learn2trade_frontend
    working_dir: /usr/src/app
    command: sh -lc "npm ci --no-audit && npx vite --host 0.0.0.0 --port 5173 --strictPort --debug"
    stdin_open: true
    tty: true
    ports:
      - "5173:5173"
    environment:
      # Depuis le conteneur front, on parle au backend par son nom de service Docker
      - VITE_API_BASE=http://backend:8000/api/v1
      # Chokidar utilise les notifications natives (inotify/fsevents). Dans montages Docker ces notifications ne passent pas bien → les changements de fichiers ne sont pas détectés.
      #Mettre CHOKIDAR_USEPOLLING=1 force un mode “polling” (scrute périodiquement les fichiers) → fiable dans Docker,un peu plus d’utilisation CPU.
      - CHOKIDAR_USEPOLLING=1
    volumes:
      - ./frontend:/usr/src/app
      # Persiste les deps pour éviter de ré-installer à chaque démarrage
      - frontend_node_modules:/usr/src/app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data:
  frontend_node_modules:
